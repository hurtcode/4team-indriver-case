<?php

declare(strict_types=1);

namespace OutDriver\Domain\Driver\Car\History;

use OutDriver\Domain\Driver\Car\History\Accidents\AccidentsHistory;
use Cycle\Annotated\Annotation\Column;
use Cycle\Annotated\Annotation\Embeddable;
use Exception;

#[Embeddable]
class ExploitationHistory
{
    #[Column(type: 'float', name: 'startMileage', nullable: true)]
    private ?float $startMileage;
    #[Column(type: 'json', name: 'accidentsHistory', nullable: true, typecast: [AccidentsHistory::class, 'typecast'])]
    private ?AccidentsHistory $accidentsHistory;
    #[Column(type: "datetime", name: 'startExploitationDate', nullable: true)]
    private ?\DateTimeImmutable $startExploitationDate;

    /** @throws Exception */
    public function __construct(
        float $startMileage,
        \DateTimeImmutable $startExploitationDate
    ) {
        $this->setStartMileage($startMileage);
        $this->setStartExploitationDate($startExploitationDate);
    }

    /** @throws Exception */
    public function setStartMileage(float $startMileage): void
    {
        if ($startMileage < 0) {
            throw new Exception("Start mileage can not be less then 0");
        }

        $this->startMileage = $startMileage;
    }

    /** @throws Exception */
    public function setStartExploitationDate(\DateTimeImmutable $startExploitationDate): void
    {
        if ($startExploitationDate > new \DateTimeImmutable()) {
            throw new Exception("Start mileage can not be less then 0");
        }

        $this->startExploitationDate = $startExploitationDate;
    }
}